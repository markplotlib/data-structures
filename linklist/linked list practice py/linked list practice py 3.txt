https://leetcode.com/problems/middle-of-the-linked-list/

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def middleNode(self, head: ListNode) -> ListNode:
        
        # get length
        length = 1
        n = head
        
        node_stack = [n]
        node_stack.append(n)
        # length = len(node_stack)
        
        while n.next != None:
            length += 1
            n = n.next
            # push node onto stack
            node_stack.append(n)
        
        mid = (length // 2) + 1
        return node_stack[mid]
