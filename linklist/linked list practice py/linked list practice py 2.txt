https://leetcode.com/problems/reverse-linked-list/

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: ListNode) -> ListNode:
        """
        in:  1->2
        out: 2->1
        
        is this node.next None?
        if not, then go to the next node
        if so, then this becomes the new head
        """
        
        stack = []
        # what is this node's next value?
        
        if self.next is not None:
            # if not None, then push NODE's value onto stack
            stack.push(self.val)
            
            
            # then go to the next node
            
            
        # if None, then this becomes the head
        
        
        # then assign this node's NEXT node,
        # to become previous node,
        # by using a LIFO stack.
        
            # create new node
            
            
            
        return 